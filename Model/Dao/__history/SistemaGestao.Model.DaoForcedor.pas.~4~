unit SistemaGestao.Model.DaoForcedor;

interface
        uses
     SistemaGestao.Model.DmConexaoEventos, System.SysUtils,Vcl.Dialogs,
        SistemaGestao.Model.EntidadeFornecedor, REST.Json,RESTRequest4D.Request,
        RESTRequest4D.Response,System.Generics.Collections,System.JSON,
        SistemaGestao.Model.EntidadeUsuarioComToken,
         SistemaGestao.Model.IterfaceDao;
        type
        TDaoFonecedor = class(TInterfacedObject,Idao<TFornecedor>)
        private

        protected
            dm:TDataEventos;
            lResponse:IResponse;
        public
          constructor Create;
          destructor Destroy; override;

        published
        function salvar (objeto:TFornecedor;usuario:TUsuarioComToken):string;
         function Carregar(objeto: TFornecedor;usuario:TUsuarioComToken): TFornecedor;
         function Excluir (pid:integer;usuario:TUsuarioComToken):string;
         function pesquisa(colecao: TObjectList<TFornecedor>;pchave,ptipo:string ;usuario:TUsuarioComToken): TObjectList<TFornecedor>;
         function buscarTodos(colecao: TObjectList<TFornecedor> ): TObjectList<TFornecedor>;
        end;
implementation

{ TDaoFonecedor }

function TDaoFonecedor.buscarTodos(
  colecao: TObjectList<TFornecedor>): TObjectList<TFornecedor>;
begin

end;

function TDaoFonecedor.Carregar(objeto: TFornecedor;
  usuario: TUsuarioComToken): TFornecedor;
begin

end;

constructor TDaoFonecedor.Create;
begin
  dm:=TDataEventos.Create(nil);
end;

destructor TDaoFonecedor.Destroy;
begin
   dm.Free;
  inherited;
end;

function TDaoFonecedor.Excluir(pid: integer; usuario: TUsuarioComToken): string;
begin

end;

function TDaoFonecedor.pesquisa(colecao: TObjectList<TFornecedor>; pchave,
  ptipo: string; usuario: TUsuarioComToken): TObjectList<TFornecedor>;
  var fornecedor: TFornecedor;
begin
 if Length (pchave)=0 then
    lREsponse:=    TRequest.New.BaseURL('http://192.168.1.3:8080/' )
    .AcceptCharset ('application/json').
     Resource( 'fornedores/').
   BasicAuthentication(usuario.funcionario.email,usuario.senha).

    DataSetAdapter(dm.FDMemFornecedor).Get
    else
if ptipo='&Código' then

  lREsponse:=    TRequest.New.BaseURL('http://192.168.1.3:8080/' ).AcceptCharset ('application/json').
          Resource( 'fornecedores/'+pchave).
       BasicAuthentication(usuario.funcionario.email,usuario.senha).

    DataSetAdapter(dm.FDMemFornecedor).Get

      else
  begin
    lREsponse:=   TRequest.New.BaseURL('http://192.168.1.3:8080/' ).AcceptCharset ('application/json').
          Resource( '/fornecedores/por-nome-comecando/?').
      BasicAuthentication(usuario.funcionario.email,usuario.senha).

      AddParam('parametro',pchave).
    DataSetAdapter(dm.FDMemFornecedor).Get ;

 end;
 if lREsponse.StatusCode=403 then
 begin
    MessageDlg('Seu usuário não permissão para utilizar este recurso !', mtError,
        [mbOK], 0);
       ShowMessage(lREsponse.Content);
 end
 else
 begin
   colecao.Clear;
   dm.FDMemFornecedor.First;
  while not dm.FDMemFornecedor.Eof do
   begin
     fornecedor:=TFornecedor.Create;
     fornecedor.codigo:= StrToInt( dm.FDMemFornecedorcodigo.Value);
     fornecedor.nomePessoa:= dm.FDMemFornecedornomePessoa.Value;
     fornecedor.cpfouCnpj:=dm.FDMemFornecedorcpfouCnpj.Value;
     colecao.Add(fornecedor);
     dm.FDMemFornecedor.Next;
   end;
 end;
   Result:=colecao;
end;

function TDaoFonecedor.salvar(objeto: TFornecedor;
  usuario: TUsuarioComToken): string;
  var json:TJSONObject;
begin
     json := TJson.ObjectToJsonObject(objeto);
    try
     if objeto.codigo=0 then
     begin

     LResponse:=  TRequest.New.BaseURL('http://192.168.1.3:8080/fornecedores' ).
    BasicAuthentication(usuario.funcionario.email,usuario.senha) .
     AcceptCharset ('application/json')
     .AddBody(json).Post;
    end
    else
    begin

     LResponse := TRequest.New.BaseURL('http://192.168.1.3:8080/fornecedores' ).
     BasicAuthentication(usuario.funcionario.email,usuario.senha).
     AcceptCharset ('application/json')
     .AddBody(json).Put;
    end;


       if LResponse.StatusCode=201  then
  begin
  ShowMessage('salvo com sucesso'+ LResponse.StatusCode.ToString);
  end;
  if (LResponse.StatusCode=200) and (objeto.codigo>0 )then
  begin
     ShowMessage('Editado com sucesso.');
  end;
  if LResponse.StatusCode=400 then
   begin
      raise Exception.Create('cpf ou cnpj já registrado  no banco de dados');
   end;
   if LResponse.StatusCode=403 then
   begin
      raise Exception.Create('seu usário não tem permissão para esta operação');
   end;
  finally

end;

end;

end.

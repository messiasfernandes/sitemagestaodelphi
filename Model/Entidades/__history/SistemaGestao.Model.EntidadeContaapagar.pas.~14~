unit SistemaGestao.Model.EntidadeContaapagar;

interface
     uses System.Generics.Collections,SistemaGestao.Model.EntidadeFornecedor,SistemaGestao.Model.EntidadeContaDetalhe,
  SistemaGestao.Model.EntidadeFormadePagamento;
        type TContasPagar = class
             private

    Fidconta: LongInt;
    Ffornecedor: TFornecedor;
    Fdatalancamento: TDate;
    Fstatuspagmaento: string;
    Fnumparcela: Integer;
    FformadePagmamento: TFormadePagamento;
    FdataDePagamento: TDate;
    Fnumtitulo: LongInt;
    Fdatavencimento: TDate;
    Fvaloparcela: Currency;
    Fvaloprago: Currency;
    Fvalorapagar: Currency;

    procedure Setdatalancamento(const Value: TDate);
    procedure Setfornecedor(const Value: TFornecedor);
    procedure Setidconta(const Value: LongInt);
    procedure SetdataDePagamento(const Value: TDate);
    procedure Setdatavencimento(const Value: TDate);
    procedure SetformadePagmamento(const Value: TFormadePagamento);
    procedure Setnumparcela(const Value: Integer);
    procedure Setnumtitulo(const Value: LongInt);
    procedure Setstatuspagmaento(const Value: string);
    procedure Setvaloparcela(const Value: Currency);
    procedure Setvaloprago(const Value: Currency);
    procedure Setvalorapagar(const Value: Currency);

             protected

             public
               constructor Create;
               destructor Destroy; override;


        property  idconta: LongInt read Fidconta write Setidconta;
        property  datalancamento : TDate read Fdatalancamento write Setdatalancamento;

        property  fornecedor :TFornecedor read Ffornecedor write Setfornecedor;
                 property  numtitulo :LongInt  read Fnumtitulo write Setnumtitulo;
          property  numparcela :Integer read Fnumparcela write Setnumparcela;
          property  valoparcela : Currency  read Fvaloparcela write Setvaloparcela;
          property  valoprago : Currency  read Fvaloprago write Setvaloprago;
          property  valorapagar: Currency  read Fvalorapagar write Setvalorapagar;
          property  dataDePagamento :TDate read FdataDePagamento write SetdataDePagamento;
          property  formadePagmamento: TFormadePagamento  read FformadePagmamento write SetformadePagmamento;
          property  datavencimento: TDate read Fdatavencimento write Setdatavencimento;
          property  statuspagmaento : string read Fstatuspagmaento write Setstatuspagmaento;

             published

             end;
implementation

{ ContasPagar }



constructor TContasPagar.Create;
begin
   Ffornecedor:=TFornecedor.Create;
   FformadePagmamento:=TFormadePagamento.Create;
end;

destructor TContasPagar.Destroy;
begin
  FformadePagmamento.Free;
  Ffornecedor.Free;
  inherited;
end;


procedure TContasPagar.SetdataDePagamento(const Value: TDate);
begin
  FdataDePagamento := Value;
end;

procedure TContasPagar.Setdatalancamento(const Value: TDate);
begin
  Fdatalancamento := Value;
end;

procedure TContasPagar.Setdatavencimento(const Value: TDate);
begin
  Fdatavencimento := Value;
end;

procedure TContasPagar.SetformadePagmamento(const Value: TFormadePagamento);
begin
  FformadePagmamento := Value;
end;

procedure TContasPagar.Setfornecedor(const Value: TFornecedor);
begin
  Ffornecedor := Value;
end;

procedure TContasPagar.Setidconta(const Value: LongInt);
begin
  Fidconta := Value;
end;

procedure TContasPagar.Setnumparcela(const Value: Integer);
begin
  Fnumparcela := Value;
end;

procedure TContasPagar.Setnumtitulo(const Value: LongInt);
begin
  Fnumtitulo := Value;
end;

procedure TContasPagar.Setstatuspagmaento(const Value: string);
begin
  Fstatuspagmaento := Value;
end;

procedure TContasPagar.Setvaloparcela(const Value: Currency);
begin
  Fvaloparcela := Value;
end;

procedure TContasPagar.Setvaloprago(const Value: Currency);
begin
  Fvaloprago := Value;
end;

procedure TContasPagar.Setvalorapagar(const Value: Currency);
begin
  Fvalorapagar := Value;
end;

end.
